version: '3.8'

services:
  # Main application
  app:
    build: .
    container_name: nrai-voice-app
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - USE_OPTIMIZED=true
      - CACHE_ENABLED=true
      - COMPRESSION_ENABLED=true
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./public:/app/public:ro
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - nrai-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
        reservations:
          cpus: '1'
          memory: 256M

  # Redis for distributed caching
  redis:
    image: redis:7-alpine
    container_name: nrai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: >
      redis-server 
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - nrai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx for load balancing (optional)
  nginx:
    image: nginx:alpine
    container_name: nrai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - nrai-network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: nrai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - nrai-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: nrai-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - nrai-network

networks:
  nrai-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
